{
"AWSTemplateFormatVersion":"2010-09-09",
"Description":"VPC with Multiple EC2 Instances to install Web Applications",
"Mappings":{
  "Params":{
    "SubnetConfig":{
      "VPC":"10.0.0.0/16",
      "PublicSubnet1":"10.0.1.0/24",
      "PrivateSubnet1":"10.0.2.0/24",
      "PublicSubnet2":"10.0.3.0/24",
      "PrivateSubnet2":"10.0.4.0/24"
    },
    "EC2":{
      "InstanceType": "t2.micro",
      "VolumeSize": "8",
      "KeyName": "MyTestSSH",
      "ImageId":  "ami-55ef662f",
      "IamInstanceProfile": "s3access",
      "DeviceName":"/dev/xvda"
    },
    "NAT":{
      "InstanceType": "t2.micro",
      "VolumeSize": "8",
      "KeyName": "MyTestSSH",
      "ImageId":  "ami-184dc970",
      "DeviceName":"/dev/xvda"
    },
    "LoadBalancerNames":{
      "ConfigServer":"",
      "ServiceRegistry":"",
      "ZuulGateway":"",
      "ProductService":""
    }

  }
},
"Resources":{
"MyVPC1":{
  "Type":"AWS::EC2::VPC",
  "Properties":{
    "CidrBlock" :{"Fn::FindInMap":["Params","SubnetConfig","VPC"]},
    "EnableDnsSupport": "true",
    "EnableDnsHostnames": "true",
    "Tags":[{"Key":"Application", "Value":"WebApplicationStack"},{"Key":"Name", "Value":"MyVPC1"}]
  }
},
  "MyInternetGateway":{
    "Type":"AWS::EC2::InternetGateway",
    "DependsOn":["MyVPC1"],
    "Properties":{
      "Tags":[{"Key":"Application", "Value":"WebApplicationStack"},{"Key":"Name", "Value":"MyInternetGateway"}]
    }
  },
  "AttachGateWay":{
    "Type":"AWS::EC2::VPCGatewayAttachment",
    "DependsOn":["MyInternetGateway"],
    "Properties":{
      "InternetGatewayId":{"Ref":"MyInternetGateway"},
      "VpcId":{"Ref":"MyVPC1"}
    }
  },
  "WebSG" : {
   "Type" : "AWS::EC2::SecurityGroup",
   "Properties" : {
      "GroupDescription" : "Allow http to client host",
      "VpcId" : {"Ref" : "MyVPC1"},
      "SecurityGroupIngress" : [{
            "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
         },
         {
           "IpProtocol" : "tcp",
           "FromPort" : "443",
           "ToPort" : "443",
           "CidrIp" : "0.0.0.0/0"
            }],
      "SecurityGroupEgress" : [{
         "IpProtocol" : "tcp",
         "FromPort" : "80",
         "ToPort" : "80",
         "CidrIp" : "0.0.0.0/0"
      },
      {
         "IpProtocol" : "tcp",
         "FromPort" : "443",
         "ToPort" : "443",
         "CidrIp" : "0.0.0.0/0"
      }]
   }
},
"PublicSSHSG" : {
 "Type" : "AWS::EC2::SecurityGroup",
 "Properties" : {
    "GroupDescription" : "Allow ssh to client host",
    "VpcId" : {"Ref" : "MyVPC1"},
    "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : "0.0.0.0/0"
       }],
      "SecurityGroupEgress": [{
         "IpProtocol" : "tcp",
         "FromPort" : "22",
         "ToPort" : "22",
         "CidrIp" : "0.0.0.0/0"
          }
              ]

 }
}
 ,
  "PublicSubnetUSEast1a":{
  "Type" : "AWS::EC2::Subnet",
  "Properties" : {
    "AvailabilityZone" : "us-east-1a",
    "CidrBlock" : {"Fn::FindInMap":["Params","SubnetConfig","PublicSubnet1"]},
    "MapPublicIpOnLaunch" : true,
    "Tags":[{"Key":"Application", "Value":"WebApplicationStack"},{"Key":"Name", "Value":"PublicSubnetUSEast1a"}],
    "VpcId" : {"Ref":"MyVPC1"}
  }
},
"PublicSubnetUSEast1b":{
  "Type" : "AWS::EC2::Subnet",
  "Properties" : {
    "AvailabilityZone" : "us-east-1b",
    "CidrBlock" : {"Fn::FindInMap":["Params","SubnetConfig","PublicSubnet2"]},
    "MapPublicIpOnLaunch" : true,
    "Tags":[{"Key":"Application", "Value":"WebApplicationStack"},{"Key":"Name", "Value":"PublicSubnetUSEast1b"}],
      "VpcId" : {"Ref":"MyVPC1"}
  }
},
"PrivateSSHSG" : {
 "Type" : "AWS::EC2::SecurityGroup",
 "DependsOn":["PublicSubnetUSEast1b","PublicSubnetUSEast1b", "PublicSSHSG"],
 "Properties" : {
    "GroupDescription" : "Allow ssh to client host",
    "VpcId" : {"Ref" : "MyVPC1"},
    "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : {"Fn::FindInMap":["Params","SubnetConfig","PublicSubnet1"]}
       }
      ]
 }
},
"PrivateSubnetUSEast1a":{
  "Type" : "AWS::EC2::Subnet",
  "Properties" : {
    "AvailabilityZone" : "us-east-1a",
    "CidrBlock" : {"Fn::FindInMap":["Params","SubnetConfig","PrivateSubnet1"]},
    "Tags":[{"Key":"Application", "Value":"WebApplicationStack"},{"Key":"Name", "Value":"PrivateSubnetUSEast1a"}],
      "VpcId" : {"Ref":"MyVPC1"}
  }
},
"PrivateSubnetUSEast1b":{
  "Type" : "AWS::EC2::Subnet",
  "Properties" : {
    "AvailabilityZone" : "us-east-1b",
    "CidrBlock" : {"Fn::FindInMap":["Params","SubnetConfig","PrivateSubnet2"]},
    "Tags":[{"Key":"Application", "Value":"WebApplicationStack"},{"Key":"Name", "Value":"PrivateSubnetUSEast1b"}],
      "VpcId" : {"Ref":"MyVPC1"}
  }
},
  "PublicRoute1":{
     "Type" : "AWS::EC2::RouteTable",
     "Properties" : {
        "VpcId" : {"Ref":"MyVPC1"},
        "Tags":[{"Key":"Application", "Value":"WebApplicationStack"},{"Key":"Name", "Value":"PublicRoute1"}]
     }
  },
"PrivateRoute1":{
   "Type" : "AWS::EC2::RouteTable",
   "Properties" : {
      "VpcId" : {"Ref":"MyVPC1"},
      "Tags":[{"Key":"Application", "Value":"WebApplicationStack"},{"Key":"Name", "Value":"PrivateRoute1"}]
   }
},

"PublicRoute1PublicSubnet1Association":{
   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
   "DependsOn":["PublicSubnetUSEast1a","PublicRoute1"],
   "Properties" : {
      "RouteTableId" : {"Ref":"PublicRoute1"},
      "SubnetId" : {"Ref":"PublicSubnetUSEast1a"}
   }
} ,
"PublicRoute1PublicSubnet2Association":{
   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
   "DependsOn":["PublicSubnetUSEast1b","PublicRoute1"],
   "Properties" : {
      "RouteTableId" : {"Ref":"PublicRoute1"},
      "SubnetId" : {"Ref":"PublicSubnetUSEast1b"}
   }
},
"PublicRoute1toIGW":{
  "Type" : "AWS::EC2::Route",
  "DependsOn":["MyInternetGateway","PublicRoute1","AttachGateWay","PublicRoute1PublicSubnet1Association", "PublicRoute1PublicSubnet2Association"],
  "Properties" : {
    "DestinationCidrBlock" : "0.0.0.0/0",
    "GatewayId" : {"Ref":"MyInternetGateway"},
    "RouteTableId" : {"Ref":"PublicRoute1"}
  }
},
"PrivateRoute1PrivateSubnet1Association":{
   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
   "DependsOn":["PrivateSubnetUSEast1a","PrivateRoute1"],
   "Properties" : {
      "RouteTableId" : {"Ref":"PrivateRoute1"},
      "SubnetId" : {"Ref":"PrivateSubnetUSEast1a"}
   }
} ,
"PrivateRoute1PrivateSubnet2Association":{
   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
   "DependsOn":["PrivateSubnetUSEast1b","PrivateRoute1"],
   "Properties" : {
      "RouteTableId" : {"Ref":"PrivateRoute1"},
      "SubnetId" : {"Ref":"PrivateSubnetUSEast1b"}
   }
},
"NATInstance1": {
    "Type": "AWS::EC2::Instance",
    "DependsOn":["PrivateRoute1PrivateSubnet1Association","PrivateRoute1PrivateSubnet2Association", "PublicRoute1toIGW"],
    "Properties": {
        "Tags":[{"Key":"Application", "Value":"WebApplicationStack"},{"Key":"Name", "Value":"NATInstance1"}],
        "SubnetId": { "Ref":"PublicSubnetUSEast1a" },
        "AvailabilityZone":{"Fn::GetAtt":["PublicSubnetUSEast1a", "AvailabilityZone"]},
        "SecurityGroupIds": [{ "Fn::GetAtt":["WebSG","GroupId" ]}],
        "BlockDeviceMappings": [
          {
              "DeviceName": { "Fn::FindInMap": [ "Params", "NAT", "DeviceName" ] },
              "Ebs": {
                "VolumeType" : "gp2",
                  "VolumeSize": { "Fn::FindInMap": [ "Params", "NAT", "VolumeSize" ] },
                   "DeleteOnTermination" : "true"
              }
          }
        ],
        "SourceDestCheck":false,
        "KeyName": { "Fn::FindInMap": [ "Params", "NAT", "KeyName" ] },
        "ImageId": { "Fn::FindInMap": [ "Params", "NAT", "ImageId" ] },
        "InstanceType": { "Fn::FindInMap": [ "Params", "NAT", "InstanceType" ] },
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
            "#!/bin/bash -v\n",
            "yum -y install wget \n",
            "yum -y install java \n",
            "yum install -y git \n",
            "###################  Proxy Setting  ################### \n"

                    ] ] } }
    }
},
"PrivateRoutetoIGW":{
  "Type" : "AWS::EC2::Route",
  "DependsOn":["PrivateRoute1","NATInstance1"],
  "Properties" : {
    "DestinationCidrBlock" : "0.0.0.0/0",
    "InstanceId" : {"Ref":"NATInstance1"},
    "RouteTableId" : {"Ref":"PrivateRoute1"}
  }
},

"MyPublicLaunchConfiguration": {
    "Type": "AWS::AutoScaling::LaunchConfiguration",
    "Properties": {
      "SecurityGroups": [{ "Fn::GetAtt":["WebSG","GroupId" ]}, { "Fn::GetAtt":["PublicSSHSG","GroupId" ]}],
      "BlockDeviceMappings": [
        {
            "DeviceName": { "Fn::FindInMap": [ "Params", "EC2", "DeviceName" ] },
            "Ebs": {
              "VolumeType" : "gp2",
                "VolumeSize": { "Fn::FindInMap": [ "Params", "EC2", "VolumeSize" ] },
                 "DeleteOnTermination" : "true"
            }
        }
      ],
        "KeyName": { "Fn::FindInMap": [ "Params", "EC2", "KeyName" ] },
        "ImageId": { "Fn::FindInMap": [ "Params", "EC2", "ImageId" ] },
        "InstanceType": { "Fn::FindInMap": [ "Params", "EC2", "InstanceType" ] },
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
            "#!/bin/bash -v\n",
            "yum -y install wget \n",
            "yum -y install java \n",
            "yum install -y git \n",
            "###################  Proxy Setting  ################### \n"

                    ] ] } }
    }
},
"MyPrivateLaunchConfiguration": {
    "Type": "AWS::AutoScaling::LaunchConfiguration",
    "Properties": {
      "SecurityGroups": [{ "Fn::GetAtt":["WebSG","GroupId" ]}, { "Fn::GetAtt":["PrivateSSHSG","GroupId" ]}],
      "BlockDeviceMappings": [
        {
            "DeviceName": { "Fn::FindInMap": [ "Params", "EC2", "DeviceName" ] },
            "Ebs": {
              "VolumeType" : "gp2",
                "VolumeSize": { "Fn::FindInMap": [ "Params", "EC2", "VolumeSize" ] },
                 "DeleteOnTermination" : "true"
            }
        }
      ],
        "KeyName": { "Fn::FindInMap": [ "Params", "EC2", "KeyName" ] },
        "ImageId": { "Fn::FindInMap": [ "Params", "EC2", "ImageId" ] },
        "InstanceType": { "Fn::FindInMap": [ "Params", "EC2", "InstanceType" ] },
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
            "#!/bin/bash -v\n",
            "yum -y install wget \n",
            "yum -y install java \n",
            "yum install -y git \n",
            "###################  Proxy Setting  ################### \n"

                    ] ] } }
    }
},
"ConfigServerAutoScalingGroup":{
  "DependsOn":["PrivateRoutetoIGW"],
  "Type":"AWS::AutoScaling::AutoScalingGroup",
  "Properties":{
    "HealthCheckType": "EC2",
    "LaunchConfigurationName": {"Ref": "MyPrivateLaunchConfiguration"},
    "LoadBalancerNames":[ { "Fn::FindInMap": [ "Params", "LoadBalancerNames", "ConfigServer" ] }],
    "MaxSize":"2",
    "MinSize":"2",
    "DesiredCapacity":"2",
    "Tags":[{"Key":"Application", "Value":"WebApplicationStack","PropagateAtLaunch": true},{"Key":"Name", "Value":"ConfigServerEc2","PropagateAtLaunch": true}],
    "VPCZoneIdentifier": [{ "Ref":"PrivateSubnetUSEast1a" }, { "Ref":"PrivateSubnetUSEast1b" }],
    "AvailabilityZones":[{"Fn::GetAtt":["PrivateSubnetUSEast1a", "AvailabilityZone"]},{"Fn::GetAtt":["PrivateSubnetUSEast1b", "AvailabilityZone"]}],
  }
},
"ServiceRegistryAutoScalingGroup":{
  "DependsOn":["PrivateRoutetoIGW"],
  "Type":"AWS::AutoScaling::AutoScalingGroup",
  "Properties":{
    "HealthCheckType": "EC2",
    "LaunchConfigurationName": {"Ref": "MyPrivateLaunchConfiguration"},
    "LoadBalancerNames": [{ "Fn::FindInMap": [ "Params", "LoadBalancerNames", "ServiceRegistry" ] }],
    "MaxSize":"2",
    "MinSize":"2",
    "DesiredCapacity":"2",
    "Tags":[{"Key":"Application", "Value":"WebApplicationStack","PropagateAtLaunch": true},{"Key":"Name", "Value":"ServiceRegistryEc2","PropagateAtLaunch": true}],
    "VPCZoneIdentifier": [{ "Ref":"PrivateSubnetUSEast1a" }, { "Ref":"PrivateSubnetUSEast1b" }],
    "AvailabilityZones":[{"Fn::GetAtt":["PrivateSubnetUSEast1a", "AvailabilityZone"]},{"Fn::GetAtt":["PrivateSubnetUSEast1b", "AvailabilityZone"]}],
  }
},
"ZuulGatewayAutoScalingGroup":{
  "DependsOn":["PrivateRoutetoIGW"],
  "Type":"AWS::AutoScaling::AutoScalingGroup",
  "Properties":{
    "HealthCheckType": "EC2",
    "LaunchConfigurationName": {"Ref": "MyPrivateLaunchConfiguration"},
    "LoadBalancerNames": [{ "Fn::FindInMap": [ "Params", "LoadBalancerNames", "ZuulGateway" ] }],
    "MaxSize":"2",
    "MinSize":"2",
    "DesiredCapacity":"2",
    "Tags":[{"Key":"Application", "Value":"WebApplicationStack","PropagateAtLaunch": true},{"Key":"Name", "Value":"ZuulGatewayEc2","PropagateAtLaunch": true}],
    "VPCZoneIdentifier": [{ "Ref":"PrivateSubnetUSEast1a" }, { "Ref":"PrivateSubnetUSEast1b" }],
    "AvailabilityZones":[{"Fn::GetAtt":["PrivateSubnetUSEast1a", "AvailabilityZone"]},{"Fn::GetAtt":["PrivateSubnetUSEast1b", "AvailabilityZone"]}],
  }
},
"ProductServiceAutoScalingGroup":{
  "DependsOn":["PrivateRoutetoIGW"],
  "Type":"AWS::AutoScaling::AutoScalingGroup",
  "Properties":{
    "HealthCheckType": "EC2",
    "LaunchConfigurationName": {"Ref": "MyPrivateLaunchConfiguration"},
    "LoadBalancerNames":[ { "Fn::FindInMap": [ "Params", "LoadBalancerNames", "ProductService" ] }],
    "MaxSize":"2",
    "MinSize":"2",
    "DesiredCapacity":"2",
    "Tags":[{"Key":"Application", "Value":"WebApplicationStack","PropagateAtLaunch": true},{"Key":"Name", "Value":"ProductServiceEc2","PropagateAtLaunch": true}],
    "VPCZoneIdentifier": [{ "Ref":"PrivateSubnetUSEast1a" }, { "Ref":"PrivateSubnetUSEast1b" }],
    "AvailabilityZones":[{"Fn::GetAtt":["PrivateSubnetUSEast1a", "AvailabilityZone"]},{"Fn::GetAtt":["PrivateSubnetUSEast1b", "AvailabilityZone"]}],
  }
},
"ProductServiceClientAutoScalingGroup":{
  "DependsOn":["PublicRoute1toIGW"],
  "Type":"AWS::AutoScaling::AutoScalingGroup",
  "Properties":{
    "HealthCheckType": "EC2",
    "LaunchConfigurationName": {"Ref": "MyPublicLaunchConfiguration"},
    "MaxSize":"2",
    "MinSize":"2",
    "DesiredCapacity":"2",
    "Tags":[{"Key":"Application", "Value":"WebApplicationStack","PropagateAtLaunch": true},{"Key":"Name", "Value":"ProductServiceClientEc2","PropagateAtLaunch": true}],
    "VPCZoneIdentifier": [{ "Ref":"PublicSubnetUSEast1a" }, { "Ref":"PublicSubnetUSEast1b" }],
    "AvailabilityZones":[{"Fn::GetAtt":["PublicSubnetUSEast1a", "AvailabilityZone"]},{"Fn::GetAtt":["PublicSubnetUSEast1b", "AvailabilityZone"]}],
  }
}

}

}
